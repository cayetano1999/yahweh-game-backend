trigger:
  - main

variables:
  containerRegistry: "Azure Container Registry"
  sonarQubeServiceName: "SonarConnection"
  projectName: "micro-promotions"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: codeAnalyze
    displayName: code analyze
    jobs:
      # - job: test
      #   steps:
      #     - template: .azuredevops/pipelines/test.yml
      #       parameters:
      #         projectName: "$(projectName)"
      #         resultsFormat: "jUnit"
      #         resultsFiles: "junit.xml"
      #         resultsDirectory: "$(System.DefaultWorkingDirectory)/.tests"

      - job: sonarqube
        # dependsOn: test
        steps:
          - template: .azuredevops/pipelines/sonarqube.yml
            parameters:
              # resultsDirectory: "$(System.DefaultWorkingDirectory)/.tests"
              name: "$(SonarQubeServiceName)"

  - stage: gittools
    displayName: gittools
    dependsOn: codeAnalyze
    jobs:
      - job: gittools
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        steps:
          - template: .azuredevops/pipelines/gittools.yml
            parameters:
              projectType: "npm"
              changelog: "./CHANGELOG.md"

  - stage: deploy
    displayName: deploy
    dependsOn: [codeAnalyze, gittools]
    jobs:
      - job: docker
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        steps:
          - template: .azuredevops/pipelines/docker.yml
            parameters:
              dockerfile: "**/Dockerfile"
              repository: "$(projectName)"
              registry: "$(containerRegistry)"
